type buffer      type=byte,   dynamic_array=256;
type buffer8     type=byte,   array=8;
type buffer16    type=byte,   array=16;
type buffer32    type=byte,   array=32;
type buffer64    type=byte,   array=64;
type buffer128   type=byte,   array=128;

choice bufferX
{
    buffer,
    buffer8,
    buffer16,
    buffer32,
    buffer64,
    buffer128
};

type u64_list    type=u64,    dynamic_array=256;
type string_list type=string, dynamic_array=256;

constant NONTRANSACTIONAL 0xFF;
enumeration EStatus
{
    OK,
    INVALID_KEY,
    INVALID_SIZE
};

//--------------------------------------------------------------------------------------//
//                                  Common Protocol                                     //
//--------------------------------------------------------------------------------------//

sequence acknowledge              {u16 transaction_id, u16 status};

//--------------------------------------------------------------------------------------//
//                                   Value Protocol                                     //
//--------------------------------------------------------------------------------------//

sequence value                    {u32 key, bufferX value};

sequence set_value                {u16 transaction_id, value data};
sequence get_value_request        {u16 transaction_id, u32 key};
sequence get_value_response       {u16 transaction_id, value data, u64 sequence_number};
sequence subscribe                {u16 transaction_id, u32 key};
sequence unsubscribe              {u16 transaction_id, u32 key};
sequence update                   {value data, u64 sequence_number};

choice protocol_value_server
{
    set_value,
    get_value_request,
    subscribe,
    unsubscribe
};

choice protocol_value_client
{
    acknowledge,
    get_value_response,
    update
};

//--------------------------------------------------------------------------------------//
//                                   Node Protocol                                      //
//--------------------------------------------------------------------------------------//

sequence node                        {u32 key, u32 parent, string name};
type     node_list                   type=node,          dynamic_array=4294967296;
type     node_optional               type=node,          optional;
type     node_attach_list            type=node_list;
type     node_detach_list            type=u64_list;

sequence list_request                {u16 transaction_id, u32 key};
sequence list_response               {u16 transaction_id, node_list nodes};
sequence attach                      {u16 transaction_id, u64 parent, u32 key, string name};
sequence detach                      {u16 transaction_id, u32 key};
sequence node_subscribe              {u16 transaction_id, u32 key};
sequence node_unsubscribe            {u16 transaction_id, u32 key};
sequence node_update_attach          {node to_attach};
sequence node_update_detach          {u32 to_detach};

choice protocol_node_server
{
    list_request,
    attach,
    detach,
    node_subscribe,
    node_unsubscribe
};

choice protocol_node_client
{
    acknowledge,
    list_response,
    node_update_attach,
    node_update_detach
};
