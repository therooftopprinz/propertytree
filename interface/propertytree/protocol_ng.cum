type buf         type=std::byte,   dynamic_array=256;
type u64_list    type=u64,    dynamic_array=256;
type string_list type=string, dynamic_array=256;

//--------------------------------------------------------------------------------------//
//                                   Value Protocol                                     //
//--------------------------------------------------------------------------------------//

sequence value                    {u64 id, buf data};

sequence subscribe                {u64 id};
sequence unsubscribe              {u64 id};
sequence update                   {value data, u64 sn};

//--------------------------------------------------------------------------------------//
//                                   Node Protocol                                      //
//--------------------------------------------------------------------------------------//

sequence node                        {u64 id, u64 parent, string name};
type     node_list                   type=node,          dynamic_array=4294967296;
type     node_optional               type=node,          optional;
type     node_attach_list            type=node_list;
type     node_detach_list            type=u64_list;

sequence list_request                {u16 transaction_id, u64 id};
sequence list_response               {u16 transaction_id, node_list nodes, u64 sequence_number};
sequence list_all_request            {u16 transaction_id};
sequence list_all_response           {u16 transaction_id, node_list nodes, u64 sequence_number};
sequence resolve_path_request        {u16 transaction_id, u64 origin,               string path};
sequence resolve_path_response       {u16 transaction_id, node_optional node ,      u64 sequence_number};
sequence attach                      {u16 transaction_id, u64 parent, u64 id, string name};
sequence detach                      {u16 transaction_id, u64 id};
sequence node_subscribe              {u64 id};
sequence node_unsubscribe            {u64 id};
sequence node_update_attach          {node to_attach, u64 sequence_number};
sequence node_update_detach          {u64 to_detach,  u64 sequence_number};

choice protocol_value_server
{
    subscribe,
    unsubscribe
};

choice protocol_value_client
{
    update
};

choice protocol_node_server
{
    list_request,
    list_all_request,
    resolve_path_request,
    attach,
    detach,
    node_subscribe,
    node_unsubscribe
};

choice protocol_node_client
{
    list_response,
    list_all_response,
    resolve_path_response,
    node_update_attach,
    node_update_detach
};
